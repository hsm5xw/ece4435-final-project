-- VHDL Entity lab10_WriteBack_Stage_lib.lab10_WriteBack_Stage.symbol
--
-- Created:
--          by - Hong.Hong (HSM)
--          at - 01:13:04 04/23/14
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2013.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY lab10_WriteBack_Stage IS
   PORT( 
      Control           : IN     std_logic;
      Dest              : IN     std_logic_vector (3 DOWNTO 0);
      Value             : IN     std_logic_vector (15 DOWNTO 0);
      clk               : IN     std_logic;
      Control_toRegFile : OUT    std_logic;
      Dest_toRegFile    : OUT    std_logic_vector (3 DOWNTO 0);
      Value_toRegFile   : OUT    std_logic_vector (15 DOWNTO 0)
   );

-- Declarations

END lab10_WriteBack_Stage ;

--
-- VHDL Architecture lab10_WriteBack_Stage_lib.lab10_WriteBack_Stage.struct
--
-- Created:
--          by - Hong.Hong (HSM)
--          at - 01:13:04 04/23/14
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2013.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;


ARCHITECTURE struct OF lab10_WriteBack_Stage IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL load_enable : std_logic;


   -- ModuleWare signal declarations(v1.12) for instance 'U_0' of 'adff'
   SIGNAL mw_U_0reg_cval : std_logic_vector(15 DOWNTO 0) := "0000000000000000";

   -- ModuleWare signal declarations(v1.12) for instance 'U_1' of 'adff'
   SIGNAL mw_U_1reg_cval : std_logic_vector(3 DOWNTO 0) := "0000";

   -- ModuleWare signal declarations(v1.12) for instance 'U_2' of 'adff'
   SIGNAL mw_U_2reg_cval : std_logic := '0';


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_0' of 'adff'
   Value_toRegFile <= mw_U_0reg_cval;
   u_0seq_proc: PROCESS (clk)BEGIN
      IF (clk'EVENT AND clk='1') THEN
         IF (load_enable = '1') THEN
            mw_U_0reg_cval <= Value;
         END IF;
      END IF;
   END PROCESS u_0seq_proc;

   -- ModuleWare code(v1.12) for instance 'U_1' of 'adff'
   Dest_toRegFile <= mw_U_1reg_cval;
   u_1seq_proc: PROCESS (clk)BEGIN
      IF (clk'EVENT AND clk='1') THEN
         IF (load_enable = '1') THEN
            mw_U_1reg_cval <= Dest;
         END IF;
      END IF;
   END PROCESS u_1seq_proc;

   -- ModuleWare code(v1.12) for instance 'U_2' of 'adff'
   Control_toRegFile <= mw_U_2reg_cval;
   u_2seq_proc: PROCESS (clk)BEGIN
      IF (clk'EVENT AND clk='1') THEN
         IF (load_enable = '1') THEN
            mw_U_2reg_cval <= Control;
         END IF;
      END IF;
   END PROCESS u_2seq_proc;

   -- ModuleWare code(v1.12) for instance 'ONE' of 'constval'
   load_enable <= '1';

   -- Instance port mappings.

END struct;
